
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp_8(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [7:0]data;
wire [7:0]ascii;
wire [7:0]times;

ps2_keyboard1 p(PS2_CLK,PS2_DAT,LEDR[0],data,ascii,times,LEDR[1],LEDR[2],LEDR[3]);
//LEDR[0]:pressud
//LEDR[1]:shift
//LEDR[2]:ctrl
//LEDR[3]:caps
//ps2_input p(PS2_CLK,SW[0],PS2_DAT,data);
//SHIFT s(PS2_CLK,is_valid,data,shift);
//CAPS c(PS2_CLK,is_valid,data,caps);
//transfer t(PS2_CLK,is_valid,shift,caps,data,ascii,count);

trsltr count1(times/10,HEX5[6:0]);
trsltr count2(times%10,HEX4[6:0]);

trsltr data1(data/16,HEX3[6:0]);
trsltr data2(data%16,HEX2[6:0]);

trsltr ascii1(ascii/16,HEX1[6:0]);
trsltr ascii2(ascii%16,HEX0[6:0]);

//=======================================================
//  Structural coding
//=======================================================



endmodule
